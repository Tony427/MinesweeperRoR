services:
  web:
    build: .
    ports:
      - "3000:3000"
    environment:
      - RAILS_ENV=docker_development
      - SECRET_KEY_BASE=docker_development_secret_key_base_change_in_production_12345678901234567890123456789012
      - RAILS_SERVE_STATIC_FILES=true
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_MAX_THREADS=5
      - WEB_CONCURRENCY=2
      # Database configuration
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=minesweeper_docker_development
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=password
    volumes:
      - ./log:/app/log
      # Development volume mounts for hot reloading
      - ./app:/app/app
      - ./config:/app/config
      - ./lib:/app/lib
    restart: unless-stopped
    command: >
      sh -c "
        echo 'üîß Setting up Rails application...' &&
        mkdir -p tmp/pids log &&
        bundle check || echo 'üì¶ Bundle check completed' &&
        echo 'üóÑÔ∏è Setting up database...' &&
        bundle exec rails db:create db:migrate || echo '‚ö†Ô∏è Database setup completed' &&
        echo 'üöÄ Starting Rails server...' &&
        RAILS_ENV=docker_development bundle exec puma -C config/puma.rb
      "
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Dependency and network configuration
    depends_on:
      - db
      - redis
    networks:
      - minesweeper_network

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=minesweeper_docker_development
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d minesweeper_docker_development"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - minesweeper_network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.5'
        reservations:
          memory: 64M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - minesweeper_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  minesweeper_network:
    driver: bridge