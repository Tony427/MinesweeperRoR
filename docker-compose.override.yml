# Docker Compose Override for Development
# This file is automatically loaded with docker-compose.yml
# It provides development-specific configurations

services:
  web:
    # Override build to enable development features
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    
    # Development environment variables
    environment:
      - RAILS_ENV=docker_development
      - SECRET_KEY_BASE=docker_development_secret_key_base_change_in_production_12345678901234567890123456789012
      - RAILS_SERVE_STATIC_FILES=true
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_MAX_THREADS=5
      - WEB_CONCURRENCY=1
      # Enable development features
      - RAILS_DEVELOPMENT_HOSTS=localhost,127.0.0.1,0.0.0.0,web
      - RAILS_LOG_LEVEL=debug
      # Database configuration
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=minesweeper_docker_development
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=password
    
    # Development volume mounts for hot reloading
    volumes:
      # Application code (for hot reloading)
      - ./app:/app/app
      - ./config:/app/config
      - ./lib:/app/lib
      - ./db:/app/db
      # Gemfile changes
      - ./Gemfile:/app/Gemfile
      - ./Gemfile.lock:/app/Gemfile.lock
      # Logs and temporary files
      - ./log:/app/log
      # Temporary files (avoid permission issues)
      - ./tmp:/app/tmp
    
    # Override command for development with database setup
    command: >
      sh -c "
        echo '🔧 Setting up docker development environment...' &&
        mkdir -p tmp/pids log &&
        bundle check || bundle install --jobs 4 &&
        echo '🗄️ Setting up database...' &&
        RAILS_ENV=docker_development bundle exec rails db:create db:migrate &&
        echo '🚀 Starting Rails server...' &&
        RAILS_ENV=docker_development bundle exec rails server -b 0.0.0.0 -p 3000
      "
    
    # Development-friendly restart policy
    restart: "no"
    
    # Stdin open for debugging
    stdin_open: true
    tty: true